- See how major version changes work. We will specify eg /v2/ at the end of the go module name.
- See if builds with replaces in go.mod can work.
- Do a test with replacing placeholder 0000 requirements with a replace statement with actual version numbers. Perhaps goproxy will grok that.
- Look at security. Escaping, requests we make, rate limiting, logging, privsep.

- Implement TLS with golang.org/x/crypto/acme/autocert.

- Create a transparency log with builds.

- Write tests.
- Update page title or favicon with success/failure of a build in progress?
- Should we keep part of the buildid? Only the first of the 4 slash-separated parts will vary with different setups (toolchains on different systems and/or their installation location). We could clear out the first part, keep the remaining parts. Especially the content hashes. That would be helpful with reproducing by others. However, it might be misleading to use part of the buildid. We might be better off just removing the buildid.  NOTE: before go1.13.3, working directories of builds would affect the resulting binary, but we always build in the package directory, which is always the same.
- Block some bots from accessing /b/ URLs.
- Better/more useful instrumentation.
- Cache responses from goproxy? So we don't misbehave towards it.
- Perhaps understand "/..." package syntax (or similar, for URL) to build all commands in a module or package dir
- Cleanup dir in go/pkg/mod/ after fetching/building, saves disk space. And we won't redownload too often. We could also periodically remove dirs with atime older than 1 hour. Will help if people build one module for different goversion/goos/goarch.
- Could remove binaries after a period of inactivity. We can still keep the hash. And if the binary is requested again, just calculate it.
- When resolving URLs with both goversion and modversion as "latest", do a single redirect?
- On pages that link to other builds that were successful, link to /z/ URLs, not /x/. Saves redirects.
- Handle more versions in URL, like @master, @commitid, etc?
- Do not make module cache readonly when goversion >= 1.14, with -modcacherw.
- Try to make this work on windows.
